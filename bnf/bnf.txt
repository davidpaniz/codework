BNF Examples
============

BNF
---
    <syntax>         ::= <rule> | <rule> <syntax>
    <rule>           ::= <opt-whitespace> "<" <rule-name> ">" <opt-whitespace> "::="
                            <opt-whitespace> <expression> <line-end>
    <opt-whitespace> ::= " " <opt-whitespace> | ""  <!-- "" is empty string, i.e. no whitespace -->
    <expression>     ::= <list> | <list> "|" <expression>
    <line-end>       ::= <opt-whitespace> <EOL> | <line-end> <line-end>
    <list>           ::= <term> | <term> <opt-whitespace> <list>
    <term>           ::= <literal> | "<" <rule-name> ">"
    <literal>        ::= '"' <text> '"' | "'" <text> "'" <!-- actually, the original BNF did not use quotes -->


American postal address
------------------------
    <postal-address> ::= <name-part> <street-address> <zip-part>
         <name-part> ::= <personal-part> <last-name> <opt-jr-part> <EOL>
                       | <personal-part> <name-part>
     <personal-part> ::= <first-name> | <initial> "."
    <street-address> ::= <house-num> <street-name> <opt-apt-num> <EOL>
          <zip-part> ::= <town-name> "," <state-code> <ZIP-code> <EOL>
       <opt-jr-part> ::= "Sr." | "Jr." | <roman-numeral> | ""

Extended BNF  - http://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_Form
============

    caracteristics:
        - terminals are enclosed in quotation marks
        - non-terminals do not need to be enclosed in angle brackets < >
        - a rule is terminated by ';'
        - a rule can span multiple lines
        - options can be expressed by '[ ]', not only '|'

            EBNF: signed number = [ sign ] , number ;
             BNF: <signed number> ::= <sign> , <number> | <number> ;

        - repetitions can be expressed by '{}':
            EBNF: number = { digit } ;
             BNF: <number> ::= ε | <number> , <digit> ; Obs: ε epsilon represent an empty production

    digit excluding zero = "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ;
    digit                = "0" | digit excluding zero ;

    natural number = digit excluding zero , { digit } ;
           integer = "0" | [ "-" ] , natural number ;

    twelve                          = "1" , "2" ;
    two hundred one                 = "2" , "0" , "1" ;
    three hundred twelve            = "3" , twelve ;
    twelve thousand two hundred one = twelve , two hundred one ;


